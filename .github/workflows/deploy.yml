name: Deploy

on:
  push:
    branches: [ "master", "main" ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/python-crud
  APP_PORT: 8000
  CONTAINER_PORT: 8000

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: kubsu
          POSTGRES_USER: kubsu
          POSTGRES_PASSWORD: kubsu
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: kubsu/python-crud-dev:latest
          load: true

      - name: Run tests
        env:
          DATABASE_URL: "postgresql+psycopg://kubsu:kubsu@localhost:5432/kubsu"
          PYTHONPATH: .
        run: |
          docker run --rm --network=host -e DATABASE_URL="postgresql+psycopg://kubsu:kubsu@localhost:5432/kubsu" -e PYTHONPATH=. kubsu/python-crud-dev:latest python -m pytest -v tests/

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Save SSH key
        shell: cmd
        run: |
          echo %SSH_PRIVATE_KEY% > id_rsa

      - name: Fix SSH key permissions
        shell: cmd
        run: |
          icacls id_rsa /inheritance:r
          icacls id_rsa /grant:r "%USERNAME%:R"

      - name: Deploy to server
        shell: cmd
        run: |
          ssh -i id_rsa -o StrictHostKeyChecking=no -p 58529 brown@kubsu.tyvik.ru ^
          "podman login -u %DOCKERHUB_USERNAME% -p %DOCKERHUB_TOKEN% docker.io && ^
          podman pull %DOCKER_IMAGE%:latest && ^
          (podman stop python-crud || exit 0) && ^
          (podman rm python-crud || exit 0) && ^
          podman run -d --name python-crud --network host %DOCKER_IMAGE%:latest"